-- MySQL Script generated by MySQL Workbench
-- Wed Dec 11 18:32:00 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema medievalfights
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema medievalfights
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `medievalfights` DEFAULT CHARACTER SET utf8 ;
USE `medievalfights` ;

-- -----------------------------------------------------
-- Table `medievalfights`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`user` (
  `iduser` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `email` VARCHAR(50) NULL,
  `password` VARCHAR(32) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `active` TINYINT NULL,
  `authenticated` TINYINT NULL,
  `power` TINYINT NULL,
  PRIMARY KEY (`iduser`),
  UNIQUE INDEX `iduser_UNIQUE` (`iduser` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `medievalfights`.`page`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`page` (
  `idpage` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `icone` VARCHAR(45) NULL,
  `header` VARCHAR(45) NULL,
  `background` VARCHAR(45) NULL,
  `status` INT NULL,
  `pagetypeid` INT NULL,
  PRIMARY KEY (`idpage`),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medievalfights`.`user_has_page`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`user_has_page` (
  `user_id` INT NOT NULL,
  `page_idpage` INT NOT NULL,
  `user_has_page_relationtype` VARCHAR(1) NULL,
  PRIMARY KEY (`user_id`, `page_idpage`),
  INDEX `fk_user_has_page1_page1_idx` (`page_idpage` ASC) VISIBLE,
  INDEX `fk_user_has_page1_user_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_page1_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `medievalfights`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_page1_page1`
    FOREIGN KEY (`page_idpage`)
    REFERENCES `medievalfights`.`page` (`idpage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `medievalfights`.`fighter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`fighter` (
  `idfighter` INT NOT NULL AUTO_INCREMENT,
  `page_idpage` INT NOT NULL,
  `fighterName` VARCHAR(255) NULL,
  `fighterAge` DATE NULL,
  `fighterWeight` FLOAT NULL,
  `fighterMainHand` VARCHAR(1) NULL,
  `fighterEmail` VARCHAR(255) NULL,
  `fighterGif` VARCHAR(255) NULL,
  `fighterSex` VARCHAR(1) NULL,
  `fighterHeight` FLOAT NULL,
  `fighterNacionality` VARCHAR(30) NULL,
  PRIMARY KEY (`idfighter`, `page_idpage`),
  INDEX `fk_fighter_page1_idx` (`page_idpage` ASC) VISIBLE,
  CONSTRAINT `fk_fighter_page1`
    FOREIGN KEY (`page_idpage`)
    REFERENCES `medievalfights`.`page` (`idpage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medievalfights`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`group` (
  `idgroup` INT NOT NULL AUTO_INCREMENT,
  `page_idpage` INT NOT NULL,
  `type` INT NULL,
  `groupName` VARCHAR(45) NULL,
  `groupLogo` VARCHAR(45) NULL,
  `groupEmail` VARCHAR(45) NULL,
  `groupcol` VARCHAR(45) NULL,
  PRIMARY KEY (`idgroup`, `page_idpage`),
  INDEX `fk_group_page1_idx` (`page_idpage` ASC) VISIBLE,
  CONSTRAINT `fk_group_page1`
    FOREIGN KEY (`page_idpage`)
    REFERENCES `medievalfights`.`page` (`idpage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medievalfights`.`group_has_fighter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`group_has_fighter` (
  `group_idgroup` INT NOT NULL AUTO_INCREMENT,
  `group_page_idpage` INT NOT NULL,
  `fighter_idfighter` INT NOT NULL,
  `fighter_page_idpage` INT NOT NULL,
  `relationtype` INT NULL,
  `group_has_fighter_entrance` DATE NOT NULL,
  `group_has_fightercol_exit` DATE NULL,
  PRIMARY KEY (`group_idgroup`, `group_page_idpage`, `fighter_idfighter`, `fighter_page_idpage`, `group_has_fighter_entrance`),
  INDEX `fk_group_has_fighter_fighter1_idx` (`fighter_idfighter` ASC, `fighter_page_idpage` ASC) VISIBLE,
  INDEX `fk_group_has_fighter_group1_idx` (`group_idgroup` ASC, `group_page_idpage` ASC) VISIBLE,
  CONSTRAINT `fk_group_has_fighter_group1`
    FOREIGN KEY (`group_idgroup` , `group_page_idpage`)
    REFERENCES `medievalfights`.`group` (`idgroup` , `page_idpage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group_has_fighter_fighter1`
    FOREIGN KEY (`fighter_idfighter` , `fighter_page_idpage`)
    REFERENCES `medievalfights`.`fighter` (`idfighter` , `page_idpage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medievalfights`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`event` (
  `idevent` INT NOT NULL AUTO_INCREMENT,
  `page_idpage` INT NOT NULL,
  `organizationName` VARCHAR(45) NULL,
  `organizationLogo` VARCHAR(45) NULL,
  `organizationPage` VARCHAR(45) NULL,
  `tournamentName` VARCHAR(45) NULL,
  `eventPage` VARCHAR(45) NULL,
  `eventLocation` VARCHAR(45) NULL,
  PRIMARY KEY (`idevent`, `page_idpage`),
  CONSTRAINT `fk_Tournament_page1`
    FOREIGN KEY (`page_idpage`)
    REFERENCES `medievalfights`.`page` (`idpage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medievalfights`.`stage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`stage` (
  `idstage` INT NOT NULL AUTO_INCREMENT,
  `stageName` VARCHAR(45) NULL,
  `event_idevent` INT NOT NULL,
  `event_page_idpage` INT NOT NULL,
  PRIMARY KEY (`idstage`),
  INDEX `fk_stage_event1_idx` (`event_idevent` ASC, `event_page_idpage` ASC) VISIBLE,
  CONSTRAINT `fk_stage_event1`
    FOREIGN KEY (`event_idevent` , `event_page_idpage`)
    REFERENCES `medievalfights`.`event` (`idevent` , `page_idpage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medievalfights`.`judge`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`judge` (
  `idjudge` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `age` VARCHAR(45) NULL,
  `nacionality` INT NULL,
  `contact` VARCHAR(45) NULL,
  PRIMARY KEY (`idjudge`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medievalfights`.`fight`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`fight` (
  `idfight` INT NOT NULL AUTO_INCREMENT,
  `fightdate` DATE NULL,
  `stage_idstage` INT NOT NULL,
  `judge_idjudge` INT NULL,
  PRIMARY KEY (`idfight`),
  INDEX `fk_fight_stage1_idx` (`stage_idstage` ASC) VISIBLE,
  INDEX `fk_fight_judge1_idx` (`judge_idjudge` ASC) VISIBLE,
  CONSTRAINT `fk_fight_stage1`
    FOREIGN KEY (`stage_idstage`)
    REFERENCES `medievalfights`.`stage` (`idstage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fight_judge1`
    FOREIGN KEY (`judge_idjudge`)
    REFERENCES `medievalfights`.`judge` (`idjudge`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medievalfights`.`fight_has_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`fight_has_group` (
  `fight_idfight` INT NOT NULL,
  `fight_stage_idStage` INT NOT NULL,
  `fight_stage_Event_page_idpage` INT NULL,
  `fight_stage_Event_id` INT NULL,
  `group_idgroup` INT NOT NULL,
  `group_page_idpage` INT NOT NULL,
  `fight_has_group_result` INT NULL,
  `idfight_has_group` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`idfight_has_group`, `group_idgroup`, `group_page_idpage`, `fight_idfight`, `fight_stage_idStage`),
  INDEX `fk_fight_has_group_group1_idx` (`group_idgroup` ASC, `group_page_idpage` ASC) VISIBLE,
  INDEX `fk_fight_has_group_fight1_idx` (`fight_idfight` ASC, `fight_stage_idStage` ASC, `fight_stage_Event_page_idpage` ASC, `fight_stage_Event_id` ASC) VISIBLE,
  CONSTRAINT `fk_fight_has_group_fight1`
    FOREIGN KEY (`fight_idfight`)
    REFERENCES `medievalfights`.`fight` (`idfight`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fight_has_group_group1`
    FOREIGN KEY (`group_idgroup` , `group_page_idpage`)
    REFERENCES `medievalfights`.`group` (`idgroup` , `page_idpage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medievalfights`.`other`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medievalfights`.`other` (
  `idother` INT NOT NULL AUTO_INCREMENT,
  `page_idpage` INT NOT NULL,
  `icon` VARCHAR(45) NULL,
  `content` VARCHAR(45) NULL,
  PRIMARY KEY (`idother`, `page_idpage`),
  INDEX `fk_other_page1_idx` (`page_idpage` ASC) VISIBLE,
  CONSTRAINT `fk_other_page1`
    FOREIGN KEY (`page_idpage`)
    REFERENCES `medievalfights`.`page` (`idpage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
